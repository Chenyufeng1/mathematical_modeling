function Dab = fun_new(x)
% % 对飞行器,计算系统误差  第三题 新的思路，直接从观测值建立 方程， 其中，观测值做差分处理，认为 已经光滑过，已经消掉随即误差。

load fun_new.mat %包含 ab6 ab9, pos6 pos9
% t  -- 为 积分 取样点，
% rv --为积分估计出的值
% 认为 pos, ab ? 都是已经 光滑处理过的数据

%alpha/beta : 为插值到 同一相对时刻的 alpha 和 beta观测值: 50:0.2:170
a6 =ab6(:,1);
b6 = ab6(:,2);

a9 =ab9(:,1);
b9 = ab9(:,2);


%alpha2   %beta2， 通过卫星的位置，计算
n = size(ab6, 1); % 求解的点数

%思路，直接建立 方程，有n 个点数， 就有 2*n+6个未知数，有3*n个方程

fx1 = zeros(n,1);
fx2 = zeros(n,1);
fx3 = zeros(n,1);

for i = 1 : 1 : n
    
    rs6 = pos6(i, :);% 第i 个取样点， 卫星的位置
    R6  = Rcal( rs6);%卫星的旋转矩阵
    
    rs9 = pos9(i, :);% 第i 个取样点， 卫星的位置
    R9  = Rcal( rs9);%卫星的旋转矩阵
    
    
    
    fx1(i) =  (R6(1,1) +  R6(1,2)*(a6(i)*x(1)+ b6(i)* x(2)-x(3)) + R6(1,3)*(-a6(i)* x(2) + b6(i)*x(1)-x(4)) )*x(2*i+7) - rs6(1)  ...
             -(R9(1,1) +  R9(1,2)*(a9(i)*x(5)+ b9(i)* x(6)-x(7)) + R9(1,3)*(-a9(i)* x(6) + b9(i)*x(5)-x(8)) )*x(2*i+8) + rs9(1);% X 方向上的方程
    
    fx2(i) = (R6(1,1) +  R6(2,2)*(a6(i)*x(1)+ b6(i)* x(2)-x(3)) + R6(2,3)*(-a6(i)* x(2) + b6(i)*x(1)-x(4)) )*x(2*i+7) - rs6(1)  ...
            -(R9(1,1) +  R9(2,2)*(a9(i)*x(5)+ b9(i)* x(6)-x(7)) + R9(2,3)*(-a9(i)* x(6) + b9(i)*x(5)-x(8)) )*x(2*i+8) + rs9(1);%   y 方向上的方程
    
    
    fx3(i) =  (R6(3,1) +  R6(3,2)*(a6(i)*x(1)+ b6(i)* x(2)-x(3)) + R6(3,3)*(-a6(i)* x(2) + b6(i)*x(1)-x(4)) )*x(2*i+7) - rs6(1)  ...
             -(R9(3,1) +  R9(3,2)*(a9(i)*x(5)+ b9(i)* x(6)-x(7)) + R9(3,3)*(-a9(i)* x(6) + b9(i)*x(5)-x(8)) )*x(2*i+8) + rs9(1);% X 方向上的方程% z 方向上的方程
    
    %
    %     fx2(i) = ( R6(2,:) *  [1; a6(i)*x(1)+ b6(i)* x(2) -x(3); -a6(i)*x(2) + b6(i)*x(1)-x(4) ])*x(2*i+7) - rs6(2)  ...
    %               -R9(2,:) *  [1; a9(i)*x(5)+ b9(i)* x(6) -x(7); -a9(i)*x(6) + b9(i)*x(5)-x(8) ] *x(2*i+8) + rs9(2);% y 方向上的方程
    %
    %
    %     fx3(i) =  R6(3,:) *  [1; a6(i)*x(1)+ b6(i)*x(2) -x(3); -a6(i)*x(2)+ b6(i)*x(1)-x(4) ]*x(2*i+7) - rs6(3)  ...
    %              -R9(3,:) *  [1; a9(i)*x(5)+ b9(i)*x(6) -x(7); -a9(i)*x(6)+ b9(i)*x(5)-x(8) ]*x(2*i+8) + rs9(3);% z 方向上的方程
    
end

fx4  = x(1)^2 +  x(2)^2 -1;
fx5  = x(5)^2 +  x(6)^2 -1;

%  Residuals:
Dab = [  fx1
    fx2
    fx3
    fx4
    fx5
    ];
end